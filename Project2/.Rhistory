y = "number of observations") +
scale_x_continuous(breaks = seq(1, 12)) +
theme(text = element_text(size = 14))
# so we need g > 3
# while the smallest expected value is at least approx 5:
# Allowing 4 here and have experimented with g:
(HL.3 <- hoslem.test(pred.sort$highpm10, pred.sort$p.3, g = 10))
# chi2-quantile to compare with:
qchisq(1 - 0.05, 10 - 2)
for(i in 1:4){
exp<-20 #Completely arbitrary number >5
git<-length(Model.list[[i]]$coefficients)+1
chisq=qchisq(1 - 0.05, git - 2)
while(exp>5){
HL<-hoslem.test(P3.pred$lowplasma, P3.sort[, I(16+i)], g = git)
exp=min(HL$expected)
print(sprintf("Smallest expected number in a group of %s model for g=%i is %f", Model.names[i], git, exp))
if(chisq<HL[1]){
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we ACCEPT", chisq, HL[[1]]))
}
HL.df <- data.frame(group = seq(1, git),
Obs0 = HL$observed[, 1],
Obs1 = HL$observed[, 2],
Exp0 = HL$expected[, 1],
Exp1 = HL$expected[, 2])
print(ggplot(HL.df, aes(x = group)) +
geom_line(aes(y = Obs0, linetype = "observed", color = "Y = 0"), size = 1) +
geom_line(aes(y = Obs1, linetype = "observed", color = "Y = 1"), size = 1) +
geom_line(aes(y = Exp0, linetype = "expected", color = "Y = 0"), size = 1) +
geom_line(aes(y = Exp1, linetype = "expected", color = "Y = 1"), size = 1) +
labs(title = sprintf("%s Model: Observed and expected in each group", Model.names[i]),
y = "number of observations") +
scale_x_continuous(breaks = seq(1, 11)) +
theme(text = element_text(size = 14)))
git=git+1
}
}
for(i in 1:4){
exp<-20 #Completely arbitrary number >5
git<-length(Model.list[[i]]$coefficients)+1
chisq=qchisq(1 - 0.05, git - 2)
while(exp>5){
HL<-hoslem.test(P3.pred$lowplasma, P3.sort[, I(16+i)], g = git)
exp=min(HL$expected)
print(sprintf("Smallest expected number in a group of %s model for g=%i is %f", Model.names[i], git, exp))
if(chisq<HL[1]){
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we REJECT", chisq, HL[[1]]))
}
else{
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we ACCEPT", chisq, HL[[1]]))
}
HL.df <- data.frame(group = seq(1, git),
Obs0 = HL$observed[, 1],
Obs1 = HL$observed[, 2],
Exp0 = HL$expected[, 1],
Exp1 = HL$expected[, 2])
print(ggplot(HL.df, aes(x = group)) +
geom_line(aes(y = Obs0, linetype = "observed", color = "Y = 0"), size = 1) +
geom_line(aes(y = Obs1, linetype = "observed", color = "Y = 1"), size = 1) +
geom_line(aes(y = Exp0, linetype = "expected", color = "Y = 0"), size = 1) +
geom_line(aes(y = Exp1, linetype = "expected", color = "Y = 1"), size = 1) +
labs(title = sprintf("%s Model: Observed and expected in each group", Model.names[i]),
y = "number of observations") +
scale_x_continuous(breaks = seq(1, 11)) +
theme(text = element_text(size = 14)))
git=git+1
}
}
for(i in 1:4){
exp<-20 #Completely arbitrary number >5
git<-length(Model.list[[i]]$coefficients)+1
while(exp>5){
HL<-hoslem.test(P3.pred$lowplasma, P3.sort[, I(16+i)], g = git)
exp=min(HL$expected)
chisq=qchisq(1 - 0.05, git - 2)
print(sprintf("Smallest expected number in a group of %s model for g=%i is %f", Model.names[i], git, exp))
if(chisq<HL[1]){
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we REJECT", chisq, HL[[1]]))
}
else{
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we ACCEPT", chisq, HL[[1]]))
}
HL.df <- data.frame(group = seq(1, git),
Obs0 = HL$observed[, 1],
Obs1 = HL$observed[, 2],
Exp0 = HL$expected[, 1],
Exp1 = HL$expected[, 2])
print(ggplot(HL.df, aes(x = group)) +
geom_line(aes(y = Obs0, linetype = "observed", color = "Y = 0"), size = 1) +
geom_line(aes(y = Obs1, linetype = "observed", color = "Y = 1"), size = 1) +
geom_line(aes(y = Exp0, linetype = "expected", color = "Y = 0"), size = 1) +
geom_line(aes(y = Exp1, linetype = "expected", color = "Y = 1"), size = 1) +
labs(title = sprintf("%s Model: Observed and expected in each group", Model.names[i]),
y = "number of observations") +
scale_x_continuous(breaks = seq(1, 11)) +
theme(text = element_text(size = 14)))
git=git+1
}
}
P3.sort<-P3.pred[order(P3.pred[I(18)]), ]
for(i in 1:4){
exp<-20 #Completely arbitrary number >5
git<-length(Model.list[[i]]$coefficients)+1
while(exp>5){
HL<-hoslem.test(P3.pred$lowplasma, P3.sort[, I(16+i)], g = git)
exp=min(HL$expected)
chisq=qchisq(1 - 0.05, git - 2)
print(sprintf("Smallest expected number in a group of %s model for g=%i is %f", Model.names[i], git, exp))
if(chisq<HL[1]){
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we REJECT", chisq, HL[[1]]))
}
else{
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we ACCEPT", chisq, HL[[1]]))
}
HL.df <- data.frame(group = seq(1, git),
Obs0 = HL$observed[, 1],
Obs1 = HL$observed[, 2],
Exp0 = HL$expected[, 1],
Exp1 = HL$expected[, 2])
print(ggplot(HL.df, aes(x = group)) +
geom_line(aes(y = Obs0, linetype = "observed", color = "Y = 0"), size = 1) +
geom_line(aes(y = Obs1, linetype = "observed", color = "Y = 1"), size = 1) +
geom_line(aes(y = Exp0, linetype = "expected", color = "Y = 0"), size = 1) +
geom_line(aes(y = Exp1, linetype = "expected", color = "Y = 1"), size = 1) +
labs(title = sprintf("%s Model: Observed and expected in each group", Model.names[i]),
y = "number of observations") +
scale_x_continuous(breaks = seq(1, 11)) +
theme(text = element_text(size = 14)))
git=git+1
}
}
order()
order()
order
for(i in 1:4){
exp<-20 #Completely arbitrary number >5
git<-length(Model.list[[i]]$coefficients)+1
P3.sort<-P3.pred[order(P3.pred[I(16+i)]), ]
while(exp>5){
HL<-hoslem.test(P3.pred$lowplasma, P3.sort[, I(16+i)], g = git)
exp=min(HL$expected)
chisq=qchisq(1 - 0.05, git - 2)
print(sprintf("Smallest expected number in a group of %s model for g=%i is %f", Model.names[i], git, exp))
if(chisq<HL[1]){
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we REJECT", chisq, HL[[1]]))
}
else{
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we ACCEPT", chisq, HL[[1]]))
}
HL.df <- data.frame(group = seq(1, git),
Obs0 = HL$observed[, 1],
Obs1 = HL$observed[, 2],
Exp0 = HL$expected[, 1],
Exp1 = HL$expected[, 2])
print(ggplot(HL.df, aes(x = group)) +
geom_line(aes(y = Obs0, linetype = "observed", color = "Y = 0"), size = 1) +
geom_line(aes(y = Obs1, linetype = "observed", color = "Y = 1"), size = 1) +
geom_line(aes(y = Exp0, linetype = "expected", color = "Y = 0"), size = 1) +
geom_line(aes(y = Exp1, linetype = "expected", color = "Y = 1"), size = 1) +
labs(title = sprintf("%s Model: Observed and expected in each group", Model.names[i]),
y = "number of observations") +
scale_x_continuous(breaks = seq(1, 11)) +
theme(text = element_text(size = 14)))
git=git+1
}
}
HL
HL.df
for(i in 1:4){
exp<-20 #Completely arbitrary number >5
git<-length(Model.list[[i]]$coefficients)+1
P3.sort<-P3.pred[order(P3.pred[I(16+i)]), ]
while(exp>5){
HL<-hoslem.test(P3.pred$lowplasma, P3.sort[, I(16+i)], g = git)
exp=min(HL$expected)
chisq=qchisq(1 - 0.05, git - 2)
print(sprintf("Smallest expected number in a group of %s model for g=%i is %f", Model.names[i], git, exp))
if(chisq<HL[1]){
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we REJECT", chisq, HL[[1]]))
}
else{
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we ACCEPT", chisq, HL[[1]]))
}
HL.df <- data.frame(group = seq(1, git),
Obs0 = HL$observed[, 1],
Obs1 = HL$observed[, 2],
Exp0 = HL$expected[, 1],
Exp1 = HL$expected[, 2])
print(ggplot(HL.df, aes(x = group)) +
geom_line(aes(y = Obs0, linetype = "observed", color = "Y = 0"), size = 1) +
geom_line(aes(y = Obs1, linetype = "observed", color = "Y = 1"), size = 1) +
geom_line(aes(y = Exp0, linetype = "expected", color = "Y = 0"), size = 1) +
geom_line(aes(y = Exp1, linetype = "expected", color = "Y = 1"), size = 1) +
labs(title = sprintf("%s Model: Observed and expected in each group", Model.names[i]),
y = "number of observations") +
scale_x_continuous(breaks = seq(1, 11)) +
theme(text = element_text(size = 14)))
ggsave(sprintf("HLT %s%i", Model.names[i], i))
git=git+1
}
}
for(i in 1:4){
exp<-20 #Completely arbitrary number >5
git<-length(Model.list[[i]]$coefficients)+1
P3.sort<-P3.pred[order(P3.pred[I(16+i)]), ]
while(exp>5){
HL<-hoslem.test(P3.pred$lowplasma, P3.sort[, I(16+i)], g = git)
exp=min(HL$expected)
chisq=qchisq(1 - 0.05, git - 2)
print(sprintf("Smallest expected number in a group of %s model for g=%i is %f", Model.names[i], git, exp))
if(chisq<HL[1]){
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we REJECT", chisq, HL[[1]]))
}
else{
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we ACCEPT", chisq, HL[[1]]))
}
HL.df <- data.frame(group = seq(1, git),
Obs0 = HL$observed[, 1],
Obs1 = HL$observed[, 2],
Exp0 = HL$expected[, 1],
Exp1 = HL$expected[, 2])
ggplot(HL.df, aes(x = group)) +
geom_line(aes(y = Obs0, linetype = "observed", color = "Y = 0"), size = 1) +
geom_line(aes(y = Obs1, linetype = "observed", color = "Y = 1"), size = 1) +
geom_line(aes(y = Exp0, linetype = "expected", color = "Y = 0"), size = 1) +
geom_line(aes(y = Exp1, linetype = "expected", color = "Y = 1"), size = 1) +
labs(title = sprintf("%s Model: Observed and expected in each group", Model.names[i]),
y = "number of observations") +
scale_x_continuous(breaks = seq(1, 11)) +
theme(text = element_text(size = 14))
ggsave(sprintf("HLT %s%i", Model.names[i], i))
git=git+1
}
}
for(i in 1:4){
exp<-20 #Completely arbitrary number >5
git<-length(Model.list[[i]]$coefficients)+1
P3.sort<-P3.pred[order(P3.pred[I(16+i)]), ]
while(exp>5){
HL<-hoslem.test(P3.pred$lowplasma, P3.sort[, I(16+i)], g = git)
exp=min(HL$expected)
chisq=qchisq(1 - 0.05, git - 2)
print(sprintf("Smallest expected number in a group of %s model for g=%i is %f", Model.names[i], git, exp))
if(chisq<HL[1]){
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we REJECT", chisq, HL[[1]]))
}
else{
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we ACCEPT", chisq, HL[[1]]))
}
HL.df <- data.frame(group = seq(1, git),
Obs0 = HL$observed[, 1],
Obs1 = HL$observed[, 2],
Exp0 = HL$expected[, 1],
Exp1 = HL$expected[, 2])
ggplot(HL.df, aes(x = group)) +
geom_line(aes(y = Obs0, linetype = "observed", color = "Y = 0"), size = 1) +
geom_line(aes(y = Obs1, linetype = "observed", color = "Y = 1"), size = 1) +
geom_line(aes(y = Exp0, linetype = "expected", color = "Y = 0"), size = 1) +
geom_line(aes(y = Exp1, linetype = "expected", color = "Y = 1"), size = 1) +
labs(title = sprintf("%s Model: Observed and expected in each group", Model.names[i]),
y = "number of observations") +
scale_x_continuous(breaks = seq(1, 11)) +
theme(text = element_text(size = 14))
ggsave(sprintf("HLT %s%i.svg", Model.names[i], i))
git=git+1
}
}
install.packages("svglite")
for(i in 1:4){
exp<-20 #Completely arbitrary number >5
git<-length(Model.list[[i]]$coefficients)+1
P3.sort<-P3.pred[order(P3.pred[I(16+i)]), ]
while(exp>5){
HL<-hoslem.test(P3.pred$lowplasma, P3.sort[, I(16+i)], g = git)
exp=min(HL$expected)
chisq=qchisq(1 - 0.05, git - 2)
print(sprintf("Smallest expected number in a group of %s model for g=%i is %f", Model.names[i], git, exp))
if(chisq<HL[1]){
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we REJECT", chisq, HL[[1]]))
}
else{
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we ACCEPT", chisq, HL[[1]]))
}
HL.df <- data.frame(group = seq(1, git),
Obs0 = HL$observed[, 1],
Obs1 = HL$observed[, 2],
Exp0 = HL$expected[, 1],
Exp1 = HL$expected[, 2])
ggplot(HL.df, aes(x = group)) +
geom_line(aes(y = Obs0, linetype = "observed", color = "Y = 0"), size = 1) +
geom_line(aes(y = Obs1, linetype = "observed", color = "Y = 1"), size = 1) +
geom_line(aes(y = Exp0, linetype = "expected", color = "Y = 0"), size = 1) +
geom_line(aes(y = Exp1, linetype = "expected", color = "Y = 1"), size = 1) +
labs(title = sprintf("%s Model: Observed and expected in each group", Model.names[i]),
y = "number of observations") +
scale_x_continuous(breaks = seq(1, 11)) +
theme(text = element_text(size = 14))
ggsave(sprintf("HLT %s%i.svg", Model.names[i], i))
git=git+1
}
}
for(i in 1:4){
exp<-20 #Completely arbitrary number >5
git<-length(Model.list[[i]]$coefficients)+1
P3.sort<-P3.pred[order(P3.pred[I(16+i)]), ]
while(exp>5){
HL<-hoslem.test(P3.pred$lowplasma, P3.sort[, I(16+i)], g = git)
exp=min(HL$expected)
chisq=qchisq(1 - 0.05, git - 2)
print(sprintf("Smallest expected number in a group of %s model for g=%i is %f", Model.names[i], git, exp))
if(chisq<HL[1]){
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we REJECT", chisq, HL[[1]]))
}
else{
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we ACCEPT", chisq, HL[[1]]))
}
HL.df <- data.frame(group = seq(1, git),
Obs0 = HL$observed[, 1],
Obs1 = HL$observed[, 2],
Exp0 = HL$expected[, 1],
Exp1 = HL$expected[, 2])
ggplot(HL.df, aes(x = group)) +
geom_line(aes(y = Obs0, linetype = "observed", color = "Y = 0"), size = 1) +
geom_line(aes(y = Obs1, linetype = "observed", color = "Y = 1"), size = 1) +
geom_line(aes(y = Exp0, linetype = "expected", color = "Y = 0"), size = 1) +
geom_line(aes(y = Exp1, linetype = "expected", color = "Y = 1"), size = 1) +
labs(title = sprintf("%s Model: Observed and expected in each group", Model.names[i]),
y = "number of observations") +
scale_x_continuous(breaks = seq(1, 11)) +
theme(text = element_text(size = 14))
ggsave(sprintf("HLT %s%i.svg", Model.names[i], git))
git=git+1
}
}
HL
P3.sort[, 17]
P3.sort[, 16+i]
HL.df
AICintermediate.model
thresh.final
auc()
aucs
#Collect AUC and intervals for all the models:
(aucs <-
data.frame(
model = c("Age", "Background", "Diet", "Final"),
auc = c(auc(roc.age), auc(roc.background), auc(roc.diet), auc(roc.final)),
lwr = c(ci(roc.age)[1], ci(roc.background)[1],
ci(roc.diet)[1], ci(roc.final)[1]),
upr = c(ci(roc.age)[3], ci(roc.background)[3],
ci(roc.diet)[3], ci(roc.final)[3])))
#Age: Manual entry due to no p<0.5
(col.02.age <- table(P3.pred$ydhat.age))
(confusiond.age <- table(P3.pred$lowplasma, P3.pred$ydhat.age))
(specd.age <- confusiond.age[1, 1] / row.01[1])
(sensd.age <- confusiond.age[2, 2] / row.01[2])
(accud.age <- sum(diag(confusiond.age)) / sum(confusiond.age))
(precd.age <- confusiond.age[2, 2] / col.02.age[2])
(sensd.background <- confusiond.background[2, 2] / row.01[2])
(col.01.background <- table(P3.pred$yhat.background))
(confusion.background <- table(P3.pred$lowplasma, P3.pred$yhat.background))
(spec.background <- confusion.background[1, 1] / row.01[1])
(sens.background <- confusion.background[2, 2] / row.01[2])
(accu.background <- sum(diag(confusion.background)) / sum(confusion.background))
(prec.background <- confusion.background[2, 2] / col.01.background[2])
#Diet
(col.01.diet <- table(P3.pred$yhat.diet))
(confusion.diet <- table(P3.pred$lowplasma, P3.pred$yhat.diet))
(spec.diet <- confusion.diet[1, 1] / row.01[1])
(sens.diet <- confusion.diet[2, 2] / row.01[2])
(accu.diet <- sum(diag(confusion.diet)) / sum(confusion.diet))
(prec.diet <- confusion.diet[2, 2] / col.01.diet[2])
#Final
(col.01.final <- table(P3.pred$yhat.final))
(confusion.final <- table(P3.pred$lowplasma, P3.pred$yhat.final))
(spec.final <- confusion.final[1, 1] / row.01[1])
(sens.final <- confusion.final[2, 2] / row.01[2])
(accu.final <- sum(diag(confusion.final)) / sum(confusion.final))
(prec.final <- confusion.final[2, 2] / col.01.final[2])
#Question b
# ROC-curves for all models####
roc.age <- roc(lowplasma ~ p.age, data = P3.pred)
roc.df.age <- coords(roc.age, transpose = FALSE)
roc.df.age$model <- "Age"
roc.background <- roc(lowplasma ~ p.background, data = P3.pred)
roc.df.background <- coords(roc.background, transpose = FALSE)
roc.df.background$model <- "Background"
roc.diet <- roc(lowplasma ~ p.diet, data = P3.pred)
roc.df.diet <- coords(roc.diet, transpose = FALSE)
roc.df.diet$model <- "Diet"
roc.final <- roc(lowplasma ~ p.final, data = P3.pred)
roc.df.final <- coords(roc.final, transpose = FALSE)
roc.df.final$model <- "Final"
roc.df <- rbind(roc.df.age, roc.df.background, roc.df.diet,
roc.df.final)
# Plot all the curves, in different colors:
ggplot(roc.df, aes(specificity, sensitivity,
color = model)) +
geom_path(size = 1) +
coord_fixed() +       # square plotting area
scale_x_reverse() +   # Reverse scale on the x-axis!
labs(caption = "ROC-curves for all the models") +
theme(text = element_text(size = 14))
#Collect AUC and intervals for all the models:
(aucs <-
data.frame(
model = c("Age", "Background", "Diet", "Final"),
auc = c(auc(roc.age), auc(roc.background), auc(roc.diet), auc(roc.final)),
lwr = c(ci(roc.age)[1], ci(roc.background)[1],
ci(roc.diet)[1], ci(roc.final)[1]),
upr = c(ci(roc.age)[3], ci(roc.background)[3],
ci(roc.diet)[3], ci(roc.final)[3])))
# Compare the AUC for the models:
roc.test(roc.age, roc.background)
roc.test(roc.age, roc.diet)
roc.test(roc.age, roc.final)
roc.test(roc.background, roc.diet)
roc.test(roc.background, roc.final)
roc.test(roc.diet, roc.final)
#Question c: Look at modules for a simpler more visual method using the cutpointr package, consider using the plots
#from there to discuss the best threshold points.
MaxSpSe.idx<-c(which.min(sqrt((1-roc.df.age$specificity)^2+(1-roc.df.age$sensitivity)^2)),
which.min(sqrt((1-roc.df.background$specificity)^2+(1-roc.df.background$sensitivity)^2)),
which.min(sqrt((1-roc.df.diet$specificity)^2+(1-roc.df.diet$sensitivity)^2)),
which.min(sqrt((1-roc.df.final$specificity)^2+(1-roc.df.final$sensitivity)^2)))
thresh.age<-roc.df.age$threshold[MaxSpSe.idx[1]]
thresh.background<-roc.df.background$threshold[MaxSpSe.idx[2]]
thresh.diet<-roc.df.diet$threshold[MaxSpSe.idx[3]]
thresh.final<-roc.df.final$threshold[MaxSpSe.idx[4]]
P3.pred$ydhat.age <- as.numeric(P3.pred$p.age > thresh.age)
P3.pred$ydhat.background <- as.numeric(P3.pred$p.background > thresh.background)
P3.pred$ydhat.diet <- as.numeric(P3.pred$p.diet > thresh.diet)
P3.pred$ydhat.final <- as.numeric(P3.pred$p.final > thresh.final)
#Age: Manual entry due to no p<0.5
(col.02.age <- table(P3.pred$ydhat.age))
(confusiond.age <- table(P3.pred$lowplasma, P3.pred$ydhat.age))
(specd.age <- confusiond.age[1, 1] / row.01[1])
(sensd.age <- confusiond.age[2, 2] / row.01[2])
(accud.age <- sum(diag(confusiond.age)) / sum(confusiond.age))
(precd.age <- confusiond.age[2, 2] / col.02.age[2])
#Background
(col.02.background <- table(P3.pred$ydhat.background))
(confusiond.background <- table(P3.pred$lowplasma, P3.pred$ydhat.background))
(specd.background <- confusiond.background[1, 1] / row.01[1])
(sensd.background <- confusiond.background[2, 2] / row.01[2])
(accud.background <- sum(diag(confusiond.background)) / sum(confusiond.background))
(precd.background <- confusiond.background[2, 2] / col.02.background[2])
#Diet
(col.02.diet <- table(P3.pred$ydhat.diet))
(confusiond.diet <- table(P3.pred$lowplasma, P3.pred$ydhat.diet))
(specd.diet <- confusiond.diet[1, 1] / row.01[1])
(sensd.diet <- confusiond.diet[2, 2] / row.01[2])
(accud.diet <- sum(diag(confusiond.diet)) / sum(confusiond.diet))
(precd.diet <- confusiond.diet[2, 2] / col.02.diet[2])
#Final
(col.02.final <- table(P3.pred$ydhat.final))
(confusiond.final <- table(P3.pred$lowplasma, P3.pred$ydhat.final))
(specd.final <- confusiond.final[1, 1] / row.01[1])
(sensd.final <- confusiond.final[2, 2] / row.01[2])
(accud.final <- sum(diag(confusiond.final)) / sum(confusiond.final))
(precd.final <- confusiond.final[2, 2] / col.02.final[2])
(confusion.background <- table(P3.pred$lowplasma, P3.pred$yhat.background))
row.01 <- table(P3.pred$lowplasma)
#Age: Manual entry due to no p<0.5
(col.02.age <- table(P3.pred$ydhat.age))
(confusiond.age <- table(P3.pred$lowplasma, P3.pred$ydhat.age))
(specd.age <- confusiond.age[1, 1] / row.01[1])
(sensd.age <- confusiond.age[2, 2] / row.01[2])
(accud.age <- sum(diag(confusiond.age)) / sum(confusiond.age))
(precd.age <- confusiond.age[2, 2] / col.02.age[2])
#Background
(col.02.background <- table(P3.pred$ydhat.background))
(confusiond.background <- table(P3.pred$lowplasma, P3.pred$ydhat.background))
(specd.background <- confusiond.background[1, 1] / row.01[1])
(sensd.background <- confusiond.background[2, 2] / row.01[2])
(accud.background <- sum(diag(confusiond.background)) / sum(confusiond.background))
(precd.background <- confusiond.background[2, 2] / col.02.background[2])
59+88
146+21
for(i in 1:4){
exp<-20 #Completely arbitrary number >5
git<-length(Model.list[[i]]$coefficients)+1
P3.sort<-P3.pred[order(P3.pred[I(16+i)]), ]
while(exp>5){
HL<-hoslem.test(P3.pred$lowplasma, P3.sort[, I(16+i)], g = git)
exp=min(HL$expected)
chisq=qchisq(1 - 0.05, git - 2)
print(sprintf("Smallest expected number in a group of %s model for g=%i is %f", Model.names[i], git, exp))
if(chisq<HL[1]){
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we REJECT", chisq, HL[[1]]))
}
else{
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we ACCEPT", chisq, HL[[1]]))
}
HL.df <- data.frame(group = seq(1, git),
Obs0 = HL$observed[, 1],
Obs1 = HL$observed[, 2],
Exp0 = HL$expected[, 1],
Exp1 = HL$expected[, 2])
ggplot(HL.df, aes(x = group)) +
geom_line(aes(y = Obs0, linetype = "observed", color = "Y = 0"), size = 1) +
geom_line(aes(y = Obs1, linetype = "observed", color = "Y = 1"), size = 1) +
geom_line(aes(y = Exp0, linetype = "expected", color = "Y = 0"), size = 1) +
geom_line(aes(y = Exp1, linetype = "expected", color = "Y = 1"), size = 1) +
labs(title = sprintf("%s Model: Observed and expected in each group", Model.names[i]),
y = "number of observations") +
scale_x_continuous(breaks = seq(1, 11)) +
theme(text = element_text(size = 14))
ggsave(sprintf("HLT%s%i.svg", Model.names[i], git))
git=git+1
}
}
