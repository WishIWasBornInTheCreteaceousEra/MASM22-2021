Fiberless.model,
nosmoke.model,
nocalories.model,
Nosmokefiber.model,
Nofibercalories.model,
Nosmokecalories.model)
AIC.list$loglikelihoods<-c(logLik(AICintermediate.model)[1],
logLik(BICtest.model)[1],
logLik(Fiberless.model)[1],
logLik(nosmoke.model)[1],
logLik(nocalories.model)[1],
logLik(Nosmokefiber.model)[1],
logLik(Nofibercalories.model)[1],
logLik(Nosmokecalories.model)[1])
(AIC.list$R2McF <- 1 - (AIC.list$loglikelihoods/lnL0))
(AIC.list$R2McF.adj <- 1 - (AIC.list$loglikelihoods - (AIC.list$df - 1)/2)/lnL0)
AIC.list
collect.AIC
(confusiond.final <- table(P3.pred$lowplasma, P3.pred$ydhat.final))
(specd.final <- confusiond.final[1, 1] / row.01[1])
(sensd.final <- confusiond.final[2, 2] / row.01[2])
(accud.final <- sum(diag(confusiond.final)) / sum(confusiond.final))
(precd.final <- confusiond.final[2, 2] / col.02.final[2])
while(exp>5){
HL<-hoslem.test(P3.sort$lowplasma, P3.sort[, I(16+i)], g = git)
exp=min(HL$expected)
chisq=qchisq(1 - 0.05, git - 2)
print(sprintf("Smallest expected number in a group of %s model for g=%i is %f", Model.names[i], git, exp))
if(chisq<HL[1]){
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we REJECT", chisq, HL[[1]]))
}
else{
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we ACCEPT", chisq, HL[[1]]))
}
HL.df <- data.frame(group = seq(1, git),
Obs0 = HL$observed[, 1],
Obs1 = HL$observed[, 2],
Exp0 = HL$expected[, 1],
Exp1 = HL$expected[, 2])
print(ggplot(HL.df, aes(x = group)) +
geom_line(aes(y = Obs0, linetype = "observed", color = "Y = 0"), size = 1) +
geom_line(aes(y = Obs1, linetype = "observed", color = "Y = 1"), size = 1) +
geom_line(aes(y = Exp0, linetype = "expected", color = "Y = 0"), size = 1) +
geom_line(aes(y = Exp1, linetype = "expected", color = "Y = 1"), size = 1) +
labs(title = sprintf("%s Model: Observed and expected in each group", Model.names[i]),
y = "number of observations") +
scale_x_continuous(breaks = seq(1, 11)) +
theme(text = element_text(size = 14)))
#ggsave(sprintf("HLT%s%i.svg", Model.names[i], git))
git=git+1
}
for(i in 1:4){
exp<-20 #Completely arbitrary number >5
git<-length(Model.list[[i]]$coefficients)+1
P3.sort<-P3.pred[order(P3.pred[I(16+i)]), ]
while(exp>5){
HL<-hoslem.test(P3.sort$lowplasma, P3.sort[, I(16+i)], g = git)
exp=min(HL$expected)
chisq=qchisq(1 - 0.05, git - 2)
print(sprintf("Smallest expected number in a group of %s model for g=%i is %f", Model.names[i], git, exp))
if(chisq<HL[1]){
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we REJECT", chisq, HL[[1]]))
}
else{
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we ACCEPT", chisq, HL[[1]]))
}
HL.df <- data.frame(group = seq(1, git),
Obs0 = HL$observed[, 1],
Obs1 = HL$observed[, 2],
Exp0 = HL$expected[, 1],
Exp1 = HL$expected[, 2])
print(ggplot(HL.df, aes(x = group)) +
geom_line(aes(y = Obs0, linetype = "observed", color = "Y = 0"), size = 1) +
geom_line(aes(y = Obs1, linetype = "observed", color = "Y = 1"), size = 1) +
geom_line(aes(y = Exp0, linetype = "expected", color = "Y = 0"), size = 1) +
geom_line(aes(y = Exp1, linetype = "expected", color = "Y = 1"), size = 1) +
labs(title = sprintf("%s Model: Observed and expected in each group", Model.names[i]),
y = "number of observations") +
scale_x_continuous(breaks = seq(1, 11)) +
theme(text = element_text(size = 14)))
#ggsave(sprintf("HLT%s%i.svg", Model.names[i], git))
git=git+1
}
}
HL
HL[[3]]
for(i in 1:4){
exp<-20 #Completely arbitrary number >5
git<-length(Model.list[[i]]$coefficients)+1
P3.sort<-P3.pred[order(P3.pred[I(16+i)]), ]
while(exp>5){
HL<-hoslem.test(P3.sort$lowplasma, P3.sort[, I(16+i)], g = git)
exp=min(HL$expected)
chisq=qchisq(1 - 0.05, git - 2)
print(sprintf("Smallest expected number in a group of %s model for g=%i is %f", Model.names[i], git, exp))
if(chisq<HL[1]){
print(sprintf("The p-value is %f"), HL[[3]])
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we REJECT", chisq, HL[[1]]))
}
else{
print(sprintf("The p-value is %f"), HL[[3]])
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we ACCEPT", chisq, HL[[1]]))
}
HL.df <- data.frame(group = seq(1, git),
Obs0 = HL$observed[, 1],
Obs1 = HL$observed[, 2],
Exp0 = HL$expected[, 1],
Exp1 = HL$expected[, 2])
print(ggplot(HL.df, aes(x = group)) +
geom_line(aes(y = Obs0, linetype = "observed", color = "Y = 0"), size = 1) +
geom_line(aes(y = Obs1, linetype = "observed", color = "Y = 1"), size = 1) +
geom_line(aes(y = Exp0, linetype = "expected", color = "Y = 0"), size = 1) +
geom_line(aes(y = Exp1, linetype = "expected", color = "Y = 1"), size = 1) +
labs(title = sprintf("%s Model: Observed and expected in each group", Model.names[i]),
y = "number of observations") +
scale_x_continuous(breaks = seq(1, 11)) +
theme(text = element_text(size = 14)))
#ggsave(sprintf("HLT%s%i.svg", Model.names[i], git))
git=git+1
}
}
for(i in 1:4){
exp<-20 #Completely arbitrary number >5
git<-length(Model.list[[i]]$coefficients)+1
P3.sort<-P3.pred[order(P3.pred[I(16+i)]), ]
while(exp>5){
HL<-hoslem.test(P3.sort$lowplasma, P3.sort[, I(16+i)], g = git)
exp=min(HL$expected)
chisq=qchisq(1 - 0.05, git - 2)
print(sprintf("Smallest expected number in a group of %s model for g=%i is %f", Model.names[i], git, exp))
if(chisq<HL[1]){
print(sprintf("The p-value is %f", HL[[3]]))
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we REJECT", chisq, HL[[1]]))
}
else{
print(sprintf("The p-value is %f", HL[[3]]))
print(sprintf("The Chi-sq value at a significance of .05 is %f, and chi-sq of the HL test is %f so we ACCEPT", chisq, HL[[1]]))
}
HL.df <- data.frame(group = seq(1, git),
Obs0 = HL$observed[, 1],
Obs1 = HL$observed[, 2],
Exp0 = HL$expected[, 1],
Exp1 = HL$expected[, 2])
print(ggplot(HL.df, aes(x = group)) +
geom_line(aes(y = Obs0, linetype = "observed", color = "Y = 0"), size = 1) +
geom_line(aes(y = Obs1, linetype = "observed", color = "Y = 1"), size = 1) +
geom_line(aes(y = Exp0, linetype = "expected", color = "Y = 0"), size = 1) +
geom_line(aes(y = Exp1, linetype = "expected", color = "Y = 1"), size = 1) +
labs(title = sprintf("%s Model: Observed and expected in each group", Model.names[i]),
y = "number of observations") +
scale_x_continuous(breaks = seq(1, 11)) +
theme(text = element_text(size = 14)))
#ggsave(sprintf("HLT%s%i.svg", Model.names[i], git))
git=git+1
}
}
#Project 1
library(ggplot2)
library(GGally)
library(ggpubr)
plasma <- read.delim("Data/plasma.txt")
head(plasma)
summary(plasma)
# At least one data point was 0, this needs to be taken
PositivePlasma <- plasma[plasma$betaplasma > 0, ]
summary(PositivePlasma)
#Linear fit of betaplasma as function of age
plasma.LinearModel <- lm(betaplasma ~ age, data = PositivePlasma)
summary(plasma.LinearModel)
confint(plasma.LinearModel, level=0.95)
#Linear fit of log(betaplasma) as function of age
plasma.LogModel <- lm(log(betaplasma) ~ age, data = PositivePlasma)
summary(plasma.LogModel)
confint(plasma.LogModel, level=0.95)
#Create fit object for the two model
y0.lin<-cbind(PositivePlasma,
fit=predict(plasma.LinearModel),
conf=predict(plasma.LinearModel, interval="confidence"),
pred=predict(plasma.LinearModel, interval="prediction"))
y0.log<-cbind(PositivePlasma,
fit=predict(plasma.LogModel),
conf=predict(plasma.LogModel, interval="confidence"),
pred=predict(plasma.LogModel, interval="prediction"))
#Plots for both betaplasma varying as a function of age, and log(betaplasma) varying as a function of age:
(ggplot(data = y0.lin, aes(x = age, y = betaplasma)) +
geom_point(size = 3) +   xlab("age [year]") +
ylab("plasma beta-carotene [ng/ml]")+
theme(text = element_text(size = 20))+
geom_line(aes(y=fit))+
geom_ribbon(aes(ymin = conf.lwr, ymax = conf.upr), alpha = 0.2)+
geom_line(aes(y = pred.lwr), color = "red", linetype = 2)+
geom_line(aes(y = pred.upr), color = "red", linetype = 2)
)
(ggplot(data = y0.log, aes(x = age, y = log(betaplasma)))+
geom_point(size = 3)+
xlab("age [year]") +
ylab("log(plasma beta-carotene) [log(ng/ml)]")+
theme(text = element_text(size = 20))+
geom_line(aes(y=fit))+
geom_ribbon(aes(ymin = conf.lwr, ymax = conf.upr), alpha = 0.2)+
geom_line(aes(y = pred.lwr), color = "red", linetype = 2)+
geom_line(aes(y = pred.upr), color = "red", linetype = 2)
)
#QQ & residual plots linear model
y0.lin$e <- plasma.LinearModel$residuals
ggplot(y0.lin, aes(x = fit, y = e))+
geom_point()+
geom_hline(yintercept = 0)+
geom_smooth(method = "loess")
ggplot(y0.lin,aes(sample = e))+
geom_qq()+
geom_qq_line()
ggplot(y0.lin,aes(x = e))+
geom_histogram(bins = 20)
#QQ & residual plots Log model
y0.log$e <- plasma.LogModel$residuals
ggplot(y0.log, aes(x = fit, y = e))+
geom_point()+
geom_hline(yintercept = 0)+
geom_smooth(method = "loess")
ggplot(y0.log,aes(sample = e))+
geom_qq()+
geom_qq_line()
ggplot(y0.log,aes(x = e))+
geom_histogram(bins = 20)
#Prediction intervals based on age
x0<-data.frame(age = 30)
predint0<-cbind(x0,round(predict(plasma.LogModel, newdata = x0, interval = "prediction"),digits = 12))
x1<-data.frame(age = 70)
predint1<-cbind(x1,round(predict(plasma.LogModel, newdata = x1, interval = "prediction"),digits = 12))
#31 year old & 71 year old
x2<-data.frame(age = 31)
predint2<-cbind(x2,round(predict(plasma.LogModel, newdata = x2, interval = "prediction"),digits = 12))
x3<-data.frame(age = 71)
predint3<-cbind(x3,round(predict(plasma.LogModel, newdata = x3, interval = "prediction"),digits = 12))
#Difference 30, 31;
exp(predint0$fit) - exp(predint2$fit)
#Difference 70, 71:
exp(predint1$fit) - exp(predint3$fit)
#Question c
#Widths: Substatial difference since we use a log transformed model.
(W30<-exp(predint0$upr)-exp(predint0$lwr))
(W70<-exp(predint1$upr)-exp(predint1$lwr))
#Nice plot explaining the difference: The difference increases as we have an exponential relation.
(ggplot(data = y0.log, aes(x = age, y = betaplasma))+
geom_point(size = 3)+
xlab("age [year]") +
ylab("Plasma \U03B2-carotene Levels [ng/ml]")+
theme(text = element_text(size = 20))+
geom_line(aes(y=fit))+
geom_ribbon(aes(ymin = exp(conf.lwr), ymax = exp(conf.upr)), alpha = 0.2)+
geom_line(aes(y = exp(pred.lwr)), color = "red", linetype = 2)+
geom_line(aes(y = exp(pred.upr)), color = "red", linetype = 2)
)
#Part 2, Frequency tables, need to turn categorical variables into factors first
(
PositivePlasma$sex <- factor(PositivePlasma$sex,
levels = c(1, 2),
labels = c("Male", "Female"))
)
(
PositivePlasma$smokstat <- factor(PositivePlasma$smokstat,
levels = c(1, 2, 3),
labels = c("Never", "Former", "Current"))
)
(
PositivePlasma$bmicat <- factor(PositivePlasma$bmicat,
levels = c(1,2,3,4),
labels = c("Underweight", "Normal", "Overweight", "Obese"))
)
(frequency <- table(PositivePlasma$smokstat,PositivePlasma$bmicat,PositivePlasma$sex))
(smokefreq <- margin.table(frequency,1))
(bmifreq <- margin.table(frequency,2))
(sexfreq <- margin.table(frequency,3))
#2b) model where beta-carotine depends only on bmi. Show how releveling to Normal matters.
(
bmi.model<- lm(log(betaplasma)~bmicat, data=PositivePlasma)
)
summary(bmi.model)
(x0 <- data.frame(
x = c(1,2,3,4),
bmicat = rep(c("Underweight", "Normal", "Overweight", "Obese"),1)))
(y0 <- cbind(
x0,
predict(bmi.model, x0, se.fit = TRUE),
conf = predict(bmi.model, x0, interval = "confidence"),
pred = predict(bmi.model, x0, interval = "prediction"))
)
y0$conf.fit <- y0$pred.fit <- NULL
y0$se.pred <- sqrt(y0$se.fit^2 + y0$residual.scale^2)
y0
(
bmicat.lines <- ggplot(data=PositivePlasma, aes(x=bmicat, y=log(betaplasma)))+
geom_point(aes(color=bmicat, shape=bmicat), size=3)+
xlab("BMI Category") +
ylab("Plasma \U03B2-carotene Levels [ng/ml]")+
geom_segment(aes(x=x-.15, y=fit, xend=x+.15, yend=fit, color=bmicat), y0, size=1.25)+
geom_segment(aes(x=x-.15, y=conf.lwr, xend=x+.15, yend=conf.lwr, color=bmicat), y0, linetype="dotdash", size=1.25)+
geom_segment(aes(x=x-.15, y=conf.upr, xend=x+.15, yend=conf.upr, color=bmicat), y0, linetype="dotdash", size=1.25)+
geom_segment(aes(x=x-.15, y=pred.lwr, xend=x+.15, yend=pred.lwr, color=bmicat), y0, linetype="dashed", size=1.25)+
geom_segment(aes(x=x-.15, y=pred.upr, xend=x+.15, yend=pred.upr, color=bmicat), y0, linetype="dashed", size=1.25)
)
#releveling to "Normal" because it has most candidates
PositivePlasma$bmicat <- relevel(PositivePlasma$bmicat,"Normal")
(
bmi.model_relevel <- lm(log(betaplasma)~bmicat, data=PositivePlasma)
)
summary(bmi.model_relevel)
(x1 <- data.frame(
x = c(1,2,3,4),
bmicat = rep(c("Underweight", "Normal", "Overweight", "Obese"),1)))
(y1 <- cbind(
x1,
predict(bmi.model_relevel, x1, se.fit = TRUE),
conf = predict(bmi.model_relevel, x1, interval = "confidence"),
pred = predict(bmi.model_relevel, x1, interval = "prediction"))
)
y1$conf.fit <- y1$pred.fit <- NULL
y1$se.pred <- sqrt(y1$se.fit^2 + y1$residual.scale^2)
y1
(
bmicat_relevel.lines <- ggplot(data=PositivePlasma, aes(x=bmicat, y=log(betaplasma)))+
geom_point(aes(color=bmicat, shape=bmicat), size=3)+
xlab("BMI Category") +
ylab("Plasma \U03B2-carotene Levels [ng/ml]")+
geom_segment(aes(x=x-.15, y=fit, xend=x+.15, yend=fit, color=bmicat), y1, size=1.25)+
geom_segment(aes(x=x-.15, y=conf.lwr, xend=x+.15, yend=conf.lwr, color=bmicat), y1, linetype="dotdash", size=1.25)+
geom_segment(aes(x=x-.15, y=conf.upr, xend=x+.15, yend=conf.upr, color=bmicat), y1, linetype="dotdash", size=1.25)+
geom_segment(aes(x=x-.15, y=pred.lwr, xend=x+.15, yend=pred.lwr, color=bmicat), y1, linetype="dashed", size=1.25)+
geom_segment(aes(x=x-.15, y=pred.upr, xend=x+.15, yend=pred.upr, color=bmicat), y1, linetype="dashed", size=1.25)
)
#Question 2C
PositivePlasma$sex<-relevel(PositivePlasma$sex, "Female")
PositivePlasma$smokstat<-relevel(PositivePlasma$smokstat, "Never")
Q2c.model<- lm(log(betaplasma)~age+bmicat+smokstat+sex, data=PositivePlasma)
BetaRG.lm <- cbind(summary(Q2c.model)$coefficients,ci =confint(Q2c.model))
#Q2c.1 & 4 get p-value=3.399e-05<.05 and thus, we reject the null hypothesis that the additional variables could be 0. For 4, We accept the null hypothesis that underweight is insignificant given all variables.
summary(Q2c.model)
#Q2c.2 ANOVA for age, Our new model is better as the p-value is less than .05.
plasma.anova <- anova(plasma.LogModel, Q2c.model)
(Fvalue<-plasma.anova$F[2])
(Pvalue_RG<-plasma.anova$"Pr(>F)"[2])
#Q2c.3 We can reject or accept the value the variables bring by their p-value. bmicat and smokstat matter but sex and age dont.
anova(Q2c.model)
View(PositivePlasma)
View(PositivePlasma)
#M
(Quants=quantile(log(PositivePlasma$betaplasma)))
split(PositivePlasma, cut(PositivePlasma$betaplasma, 3))
Quants[0]
Quants[1]
Quants
exp(Quants)
#M
(Quants=quantile(PositivePlasma$betaplasma))
PositivePlasma$plasmacat <- cut(PositivePlasma$betaplasma, breaks = c(Quants[1], Quants[2], Quants[3], Quants[4], Quants[5]))
PositivePlasma$plasmacat
Trial<-split(PositivePlasma, cut(PositivePlasma$betaplasma, 4))
PositivePlasma$smokstat<-relevel(PositivePlasma$smokstat, "Never")
plasma <- read.delim("Data/plasma.txt")
getqd()
getwd()
setwd("C:/Users/crete/Documents/MASM22-2021/Project 3")
PositivePlasma$bmicat <- factor(PositivePlasma$bmicat,
levels = c(1,2,3,4),
labels = c("Underweight", "Normal", "Overweight", "Obese"))
plasma <- read.delim("Data/plasma.txt")
PositivePlasma <- plasma[plasma$betaplasma > 0, ]
#Project 3
library(ggplot2)
library(GGally)
library(ggpubr)
library(pROC)
library(ResourceSelection)
library(nnet)
plasma <- read.delim("Data/plasma.txt")
PositivePlasma <- plasma[plasma$betaplasma > 0, ]
#Turn categorical variables into factor variables:
PositivePlasma$sex <- factor(PositivePlasma$sex,
levels = c(1, 2),
labels = c("Male", "Female"))
PositivePlasma$smokstat <- factor(PositivePlasma$smokstat,
levels = c(1, 2, 3),
labels = c("Never", "Former", "Current"))
PositivePlasma$bmicat <- factor(PositivePlasma$bmicat,
levels = c(1,2,3,4),
labels = c("Underweight", "Normal", "Overweight", "Obese"))
PositivePlasma$vituse <- factor(PositivePlasma$vituse,
levels = c(1, 2, 3),
labels = c("Yes, fairly often", "Yes, not often", "No"))
#relevel to suitable reference categories:
PositivePlasma$sex<-relevel(PositivePlasma$sex, "Female")
PositivePlasma$smokstat<-relevel(PositivePlasma$smokstat, "Never")
PositivePlasma$bmicat <- relevel(PositivePlasma$bmicat,"Normal")
PositivePlasma$vituse <- relevel(PositivePlasma$vituse,"Yes, fairly often")
#M
(Quants=quantile(PositivePlasma$betaplasma))
PositivePlasma$plasmacat <- cut(PositivePlasma$betaplasma, breaks = c(Quants[1], Quants[2], Quants[3], Quants[4], Quants[5]))
Trial<-split(PositivePlasma, cut(PositivePlasma$betaplasma, 4))
View(Trial)
View(Trial)
View(PositivePlasma)
View(PositivePlasma)
Quants
len(PositivePlasma$plasmacat==Quants[1])
length(PositivePlasma$plasmacat==Quants[1])
length(PositivePlasma$plasmacat==Quants[2])
length(PositivePlasma$plasmacat==Quants[3])
length(PositivePlasma$plasmacat==(14,91])
length(PositivePlasma$plasmacat=="(14,91]")
length(PositivePlasma$plasmacat=="(91,140]")
length(PositivePlasma$plasmacat=="(140,230]")
PositivePlasma$plasmacat <- cut(PositivePlasma$betaplasma, breaks = c(Quants[1], Quants[2], Quants[3], Quants[4], Quants[5]+1))
ten_percent <- quantile(PositivePlasma, c(0.2, 0.4, 0.6, 0.8))
ten_percent <- quantile(PositivePlasma$betaplasma, c(0.2, 0.4, 0.6, 0.8))
ten_percent
Quants
#Project 2
library(ggplot2)
library(GGally)
library(ggpubr)
library(pROC)
library(ResourceSelection)
plasma <- read.delim("Data/plasma.txt")
head(plasma)
summary(plasma)
# At least one data point was 0, this needs to be taken
PositivePlasma <- plasma[plasma$betaplasma > 0, ]
summary(PositivePlasma)
#Turn categorical variables into factor variables:
PositivePlasma$sex <- factor(PositivePlasma$sex,
levels = c(1, 2),
labels = c("Male", "Female"))
PositivePlasma$smokstat <- factor(PositivePlasma$smokstat,
levels = c(1, 2, 3),
labels = c("Never", "Former", "Current"))
PositivePlasma$bmicat <- factor(PositivePlasma$bmicat,
levels = c(1,2,3,4),
labels = c("Underweight", "Normal", "Overweight", "Obese"))
PositivePlasma$vituse <- factor(PositivePlasma$vituse,
levels = c(1, 2, 3),
labels = c("Yes, fairly often", "Yes, not often", "No"))
#relevel to suitable reference categories:
PositivePlasma$sex<-relevel(PositivePlasma$sex, "Female")
PositivePlasma$smokstat<-relevel(PositivePlasma$smokstat, "Never")
PositivePlasma$bmicat <- relevel(PositivePlasma$bmicat,"Normal")
PositivePlasma$vituse <- relevel(PositivePlasma$vituse,"Yes, fairly often")
#Part 0 a)
a <- 225.498
#Part 0 b) beta-carotene is considered low if below 225.498 ng/ml
PositivePlasma$lowplasma <- as.numeric(PositivePlasma$betaplasma < a)
View(PositivePlasma)
View(PositivePlasma)
PositivePlasma$plasmacat <- factor(PositivePlasma$lowplasma,
levels = c(Quant[2], Quant[3]),
labels = c("high", "low"))
(Quants=quantile(PositivePlasma$betaplasma))
PositivePlasma$plasmacat <- cut(PositivePlasma$betaplasma, breaks = c(Quants[1], Quants[2], Quants[3], Quants[4], Quants[5]+1))
PositivePlasma$plasmacat <- factor(PositivePlasma$lowplasma,
levels = c(Quants[2], Quants[3]),
labels = c("high", "low"))
(Quants=quantile(PositivePlasma$betaplasma))
PositivePlasma$lowplasma <- cut(PositivePlasma$betaplasma, breaks = c(Quants[1], Quants[2], Quants[3], Quants[4], Quants[5]+1))
PositivePlasma$plasmacat <- factor(PositivePlasma$lowplasma,
levels = c(Quants[2], Quants[3]),
labels = c("high", "low"))
(Quants=quantile(PositivePlasma$betaplasma))
PositivePlasma$lowplasma <- cut(PositivePlasma$betaplasma,
breaks = c(Quants[1], Quants[2], Quants[3], Quants[4], Quants[5]+1),
labels=c("Critically Low", "At Risk", "Normal", "Healthy"))
PositivePlasma$plasmacat <- cut(PositivePlasma$betaplasma,
breaks = c(Quants[1], Quants[2], Quants[3], Quants[4], Quants[5]+1),
labels=c("Critically Low", "At Risk", "Normal", "Healthy"))
#Project 3
library(ggplot2)
library(GGally)
library(ggpubr)
library(pROC)
library(ResourceSelection)
library(nnet)
plasma <- read.delim("Data/plasma.txt")
PositivePlasma <- plasma[plasma$betaplasma > 0, ]
#Turn categorical variables into factor variables:
PositivePlasma$sex <- factor(PositivePlasma$sex,
levels = c(1, 2),
labels = c("Male", "Female"))
PositivePlasma$smokstat <- factor(PositivePlasma$smokstat,
levels = c(1, 2, 3),
labels = c("Never", "Former", "Current"))
PositivePlasma$bmicat <- factor(PositivePlasma$bmicat,
levels = c(1,2,3,4),
labels = c("Underweight", "Normal", "Overweight", "Obese"))
PositivePlasma$vituse <- factor(PositivePlasma$vituse,
levels = c(1, 2, 3),
labels = c("Yes, fairly often", "Yes, not often", "No"))
#relevel to suitable reference categories:
PositivePlasma$sex<-relevel(PositivePlasma$sex, "Female")
PositivePlasma$smokstat<-relevel(PositivePlasma$smokstat, "Never")
PositivePlasma$bmicat <- relevel(PositivePlasma$bmicat,"Normal")
PositivePlasma$vituse <- relevel(PositivePlasma$vituse,"Yes, fairly often")
#M
(Quants=quantile(PositivePlasma$betaplasma))
PositivePlasma$plasmacat <- cut(PositivePlasma$betaplasma,
breaks = c(Quants[1], Quants[2], Quants[3], Quants[4], Quants[5]+1),
labels=c("Critically Low", "At Risk", "Normal", "Healthy"))
PositivePlasma$plasmacat <- cut(PositivePlasma$betaplasma,
breaks = c(Quants[1], Quants[2], Quants[3], Quants[4], Quants[5]+1),
labels=c("Very Low", "Low", "Moderately High", "High"))
PositivePlasma$plasmacat=="High"
length(PositivePlasma$plasmacat=="High")
count(PositivePlasma$plasmacat=="High")
table(PositivePlasma$plasmacat)
